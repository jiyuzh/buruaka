#!/usr/bin/env perl

use warnings;
use strict;

use POSIX;
use File::Basename;
use Data::Dumper;
use Getopt::Long;
use JSON::PP;
use HTTP::Tiny;

my $SCRIPT_DIR = dirname(__FILE__);

sub help
{
	my ($exitval) = @_;

	my $prog = basename($0);

	my $help = <<"EOF";
roselia-copy v1.0.0
Jiyuan Zhang <jiyuanz3\@illinois.edu>

roselia-copy is a clipboard writer using the Roselia shell co-protocol.

Roselia is a REST API protocol for shell rich experience.

USAGE:
    $prog [OPTIONS] FILE
    COMMAND | $prog [OPTIONS]

ARGS:
    <FILE>
        A file to read copying data from.

    <COMMAND>
        A command to pipe copying data from.

OPTIONS:
    -h, -?, --help
        Show this help.

OUTPUT:
    None.

EXIT STATUS:
    0   The requested action was successfully performed.

    1   Invalid command-line usage.

    2   Failed to connect to the server.

    3   Failed to send clipboard data.

EOF
	print($help);

	if ($exitval =~ /^\d+$/) {
		exit $exitval;
	}

	exit 0;
}

sub copyAll
{
	my ($ep, $text) = @_;

	my $headers = { 'Content-Type' => "application/json" };
	my $data = { "content" => $text };

	my $response = HTTP::Tiny->new->post("$ep/paste", { content => encode_json($data), headers => $headers });

	return ($response->{success}) && ($response->{status} == 200);
}

GetOptions(
	'help|?' => \&help,
) or help(1);

my $str = "";
my $ep = `"$SCRIPT_DIR/roselia-probe"`;

exit 2 if ($? != 0 || $ep eq "");

# File mode
if (scalar(@ARGV) == 1) {
	$str = readAllText($ARGV[0]);
}
# Pipe mode, STDIN is detached from terminal
elsif (! -t STDIN) {
	$str = do { local $/; <STDIN> };
	close STDIN;
}
# Terminal mode w/o file input, show help
else {
	help(1);
}

exit 3 unless copyAll($ep, $str);

exit 0;
